.. _rust-tutorial-getting-started:

===============
Getting Started
===============

.. default-domain:: mongodb

.. toctree::
   :titlesonly:
   :maxdepth: 1


Overview
--------

This guide shows you how to create an application that uses the Rust
driver to connect to a MongoDB Atlas cluster.

The Rust driver is an interface through which you can connect to and 
communicate with MongoDB instances.

MongoDB Atlas is a fully-managed cloud database service that hosts your data 
on MongoDB instances. We show you how to get started with your own free 
(no credit card required) instance in this guide.

Follow the steps below to connect your Rust application with a MongoDB
instance.

Set up Your Project
-------------------

Install
~~~~~~~

Initialize the Project
~~~~~~~~~~~~~~~~~~~~~~

Add MongoDB as a Dependency
~~~~~~~~~~~~~~~~~~~~~~~~~~~

Create a MongoDB Cluster
------------------------

Set up a Free Tier Cluster in Atlas
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

After installing the MongoDB driver, create a MongoDB instance to store
and manage your data. Complete the
:atlas:`Get Started with Atlas </getting-started?tck=docs_driver_rust>` guide
to set up a new Atlas account, free tier cluster (MongoDB instance), load
datasets, and interact with the data.

After completing the steps in the Atlas guide, you should have a new MongoDB
cluster deployed in Atlas, a new database user, and sample datasets loaded
into your cluster.

Connect to your Cluster
-----------------------

In this step, we create and run an application that uses the Rust MongoDB
driver to connect to your instance of MongoDB and run a query on the sample
data.

We pass instructions to the driver on where and how to connect to your
MongoDB instance in a string called the *connection string*. This string
includes information on the hostname or IP address and port of your
instance, authentication mechanism, user credentials when applicable, and
other connection options.

To retrieve your connection string for the instance and user you created in
the previous step, log into your Atlas account and navigate to the
**Clusters** section and click the **Connect** button for the cluster that you
want to connect to as shown below.

.. figure:: /includes/figures/atlas_connection_select_cluster.png
   :alt: The connect button in the clusters section of the Atlas UI

Proceed to the **Connect Your Application** step and select the Rust
driver. Select the "Connection String Only" tab and click the **Copy**
button to copy the *connection string* to your clipboard as shown below.

.. figure:: /includes/figures/atlas_connection_copy_string.png
   :alt: The connection string copy button in the Connection String Only tab of the Atlas UI

Save your connection string to a safe location that you can access in the
next step.

Next, create a file containing the following code in your project
directory, making sure to replace the section of the connection string
with the credentials (username and password) you created on Atlas:

TODO: code example

Run the sample code with the following command from your command line:

TODO: run command

When you run the command, the sample code should output the details of the
movie which resembles the following:

.. code-block:: none

   {
     _id: ...,
     plot: 'A young man is accidentally sent 30 years into the past...',
     genres: [ 'Adventure', 'Comedy', 'Sci-Fi' ],
     ...
     title: 'Back to the Future',
     ...
   }

If you receive an error, check whether you included the proper connection
string in the application code, and loaded the sample dataset in your Atlas
cluster.

After completing this step, you should have a working application that uses
the Rust  driver to connect to your MongoDB instance, run a query on the
sample data, and prints out the result.

